# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'crop-guide.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

# import for database
from PyQt5 import QtCore, QtGui, QtWidgets
# import for database
import sqlite3

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(875, 595)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(280, 10, 281, 80))
        self.frame.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.label = QtWidgets.QLabel(self.frame)
        self.label.setGeometry(QtCore.QRect(50, 20, 171, 31))
        font = QtGui.QFont()
        font.setPointSize(25)
        self.label.setFont(font)
        self.label.setStyleSheet("color: rgb(0, 0, 0);")
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(80, 140, 361, 281))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.groupBox.setFont(font)
        self.groupBox.setObjectName("groupBox")
        self.acres_lineEdit = QtWidgets.QLineEdit(self.groupBox)
        self.acres_lineEdit.setGeometry(QtCore.QRect(130, 161, 210, 21))
        self.acres_lineEdit.setObjectName("acres_lineEdit")
        self.budget_label = QtWidgets.QLabel(self.groupBox)
        self.budget_label.setGeometry(QtCore.QRect(42, 131, 62, 19))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.budget_label.setFont(font)
        self.budget_label.setObjectName("budget_label")
        self.state_label = QtWidgets.QLabel(self.groupBox)
        self.state_label.setGeometry(QtCore.QRect(57, 70, 47, 19))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.state_label.setFont(font)
        self.state_label.setObjectName("state_label")
        self.acres_label = QtWidgets.QLabel(self.groupBox)
        self.acres_label.setGeometry(QtCore.QRect(53, 160, 51, 19))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.acres_label.setFont(font)
        self.acres_label.setObjectName("acres_label")
        self.state_comboBox = QtWidgets.QComboBox(self.groupBox)
        self.state_comboBox.setGeometry(QtCore.QRect(130, 68, 140, 26))
        self.state_comboBox.setObjectName("state_comboBox")
        self.state_comboBox.addItem("Northern")
        self.state_comboBox.addItem("Volta")
        self.state_comboBox.addItem("Central")
        self.state_comboBox.addItem("Western")
        self.state_comboBox.addItem("Accra")
        self.season_comboBox = QtWidgets.QComboBox(self.groupBox)
        self.season_comboBox.setGeometry(QtCore.QRect(130, 98, 140, 26))
        self.season_comboBox.setObjectName("season_comboBox")
        self.season_comboBox.addItem("Raining")
        self.season_comboBox.addItem("Dry")
        self.season_comboBox.addItem("Hammathan")
        self.season_label = QtWidgets.QLabel(self.groupBox)
        self.season_label.setGeometry(QtCore.QRect(41, 102, 63, 19))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.season_label.setFont(font)
        self.season_label.setObjectName("season_label")
        self.budget_lineEdit = QtWidgets.QLineEdit(self.groupBox)
        self.budget_lineEdit.setGeometry(QtCore.QRect(130, 130, 210, 21))
        self.budget_lineEdit.setObjectName("budget_lineEdit")
        self.submit_pushButton = QtWidgets.QPushButton(self.groupBox)
        self.submit_pushButton.setGeometry(QtCore.QRect(130, 200, 79, 32))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.submit_pushButton.setFont(font)
        self.submit_pushButton.setObjectName("submit_pushButton")
        self.submit_pushButton.clicked.connect(self.submit)
        self.cancel_pushButton = QtWidgets.QPushButton(self.groupBox)
        self.cancel_pushButton.setGeometry(QtCore.QRect(216, 200, 79, 32))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.cancel_pushButton.setFont(font)
        self.cancel_pushButton.setObjectName("cancel_pushButton")
        self.cancel_pushButton.clicked.connect(self.cancel)
        self.groupBox_2 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_2.setGeometry(QtCore.QRect(460, 140, 381, 281))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.groupBox_2.setFont(font)
        self.groupBox_2.setObjectName("groupBox_2")
        self.result_label = QtWidgets.QLabel(self.groupBox_2)
        self.result_label.setGeometry(QtCore.QRect(20, 50, 341, 131))
        self.result_label.setObjectName("result_label")
        self.result_textEdit = QtWidgets.QTextEdit(self.groupBox_2)
        self.result_textEdit.setGeometry(QtCore.QRect(20, 190, 341, 79))
        self.result_textEdit.setObjectName("result_textEdit")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 875, 24))
        self.menubar.setObjectName("menubar")
        self.menuCrop_Guide = QtWidgets.QMenu(self.menubar)
        self.menuCrop_Guide.setObjectName("menuCrop_Guide")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar.addAction(self.menuCrop_Guide.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "CROP GUIDE"))
        self.label.setText(_translate("MainWindow", "CROP GUIDE"))
        self.groupBox.setTitle(_translate("MainWindow", "Farm Details"))
        self.budget_label.setText(_translate("MainWindow", "Budget :"))
        self.state_label.setText(_translate("MainWindow", "State :"))
        self.acres_label.setText(_translate("MainWindow", "Acres :"))
        self.season_label.setText(_translate("MainWindow", "Season :"))
        self.submit_pushButton.setText(_translate("MainWindow", "Submit"))
        self.cancel_pushButton.setText(_translate("MainWindow", "Cancel"))
        self.groupBox_2.setTitle(_translate("MainWindow", "Result"))
        self.result_label.setText(_translate("MainWindow", "TextLabel"))
        self.menuCrop_Guide.setTitle(_translate("MainWindow", "Crop Guide"))

    def submit(self):
        print("Clicked")
        state = self.state_comboBox.currentText()
        season = self.season_comboBox.currentText()
        money = int(self.budget_lineEdit.text())
        acres = int(self.acres_lineEdit.text())

        #print(state)
        #print(season)
        #print(money)
        #print(acres)
        #db connection
        conn = sqlite3.connect('crop_guide.sqlite')
        cur = conn.cursor()
        print(cur)
        # Get all the values in the column in the database
        result = cur.execute("SELECT * FROM crop WHERE northern IS NOT NULL")
        # fetch the output
        result = cur.fetchall()
        # remove null values by coverting into a list and using slice operator
        result =list(result[0][5:-1])
        print(result)

    def cancel(self):
        print("Cancel the form inputs")

    
class MainWindow(QtWidgets.QMainWindow, Ui_MainWindow):
    def __init__(self, parent=None):
        super(MainWindow, self).__init__(parent=parent)
        self.setupUi(self)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    w = MainWindow()
    w.show()
    sys.exit(app.exec_())